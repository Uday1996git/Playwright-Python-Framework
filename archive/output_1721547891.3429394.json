{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "request = <SubRequest 'py_fixture' for <Function test_2ndTest>>, playwrightInstance = <playwright._impl._playwright.Playwright object at 0x0000021CE6857A70>\n\n    @pytest.fixture(scope=\"module\")\n    def py_fixture(request, playwrightInstance):\n        test_name = ObjectManager.get_supportObject().return_testName(request)\n>       page, context = ObjectManager.get_ControllerObject().startBrowser(browser, param, value, playwrightInstance, record_video, test_name, )\n\nconftest.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nBrowserFactory.py:34: in startBrowser\n    brow = Controller.chooseBroswer(self, browser, param, value, playwright)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <BrowserFactory.Controller object at 0x0000021CE6857D40>, browser = 'CHROME', param = False, value = 0\nplaywright = <playwright._impl._playwright.Playwright object at 0x0000021CE6857A70>\n\n    def chooseBroswer(self, browser: str, param, value, playwright: Playwright):\n        if browser is not None:\n            if browser.lower() == \"chromium\":\n                return playwright.chromium.launch(headless=param, slow_mo=value)\n            elif browser.lower() == \"firefox\":\n                return playwright.firefox.launch(headless=param, slow_mo=value)\n            else:\n>               raise NameError(f\"{browser} is not supported\")\nE               NameError: CHROME is not supported\n\nBrowserFactory.py:29: NameError\n", "test_name": "test_2ndTest", "rerun": "0"}}, "suite_name": "test_2ndTest.py"}, "1": {"suite_name": "test_test.py", "tests": {"0": {"status": "ERROR", "message": "request = <SubRequest 'py_fixture' for <Function test_first>>, playwrightInstance = <playwright._impl._playwright.Playwright object at 0x0000021CE6857A70>\n\n    @pytest.fixture(scope=\"module\")\n    def py_fixture(request, playwrightInstance):\n        test_name = ObjectManager.get_supportObject().return_testName(request)\n>       page, context = ObjectManager.get_ControllerObject().startBrowser(browser, param, value, playwrightInstance, record_video, test_name, )\n\nconftest.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nBrowserFactory.py:34: in startBrowser\n    brow = Controller.chooseBroswer(self, browser, param, value, playwright)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <BrowserFactory.Controller object at 0x0000021CE6E3C770>, browser = 'CHROME', param = False, value = 0\nplaywright = <playwright._impl._playwright.Playwright object at 0x0000021CE6857A70>\n\n    def chooseBroswer(self, browser: str, param, value, playwright: Playwright):\n        if browser is not None:\n            if browser.lower() == \"chromium\":\n                return playwright.chromium.launch(headless=param, slow_mo=value)\n            elif browser.lower() == \"firefox\":\n                return playwright.firefox.launch(headless=param, slow_mo=value)\n            else:\n>               raise NameError(f\"{browser} is not supported\")\nE               NameError: CHROME is not supported\n\nBrowserFactory.py:29: NameError\n", "test_name": "test_first", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}}}, "date": "July 21, 2024", "start_time": 1721547861.4266095, "total_suite": 2, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "2", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "2"}